{"version":3,"sources":["pages/Login/Login.js","pages/Dashboard/Dashboard.js","pages/Register/Register.js","components/CheckAuth/checkAuth.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","ALogin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callApi","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","headers","wrap","_context","prev","next","Content-Type","post","then","response","console","log","handleResponse","message","status","history","push","catch","error","stop","_x","apply","arguments","handleSubmit","bind","assertThisInitialized","handleInputChange","state","formData","username","password","event","objectSpread","preventDefault","target","value","type","checked","name","setState","react_default","createElement","className","id","Container","fluid","Col","xs","size","offset","sm","lg","Card","CardHeader","CardBody","Form","method","onSubmit","FormGroup","Label","for","Input","placeholder","onChange","required","Button","color","CardFooter","react_router_dom","to","React","Component","Dashboard","Row","index_es","icon","About","isCreated","onUserCreate","fName","lName","email","repassword","row","form","library","add","faThumbsUp","faArrowLeft","App","react_router","path","exact","component","ComponentToProtect","_Component","_class","loading","redirect","inherits","createClass","key","_this2","get","res","Error","err","_this$state","Fragment","Register","Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59a5ae81.chunk.js","sourcesContent":["//Login Page for reactXNodeAuth Template\n// 6/25/19\n\nimport React from 'react';\nimport { Container, Card, CardHeader, CardFooter, CardBody, Col, Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nconst axios = require('axios');\n\nexport default class ALogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleResponse = this.handleResponse.bind(this);\n    this.state = {\n      formData: {\n        username: \"\",\n        password: \"\"\n      },\n      response: \" \"\n    };\n  }\n\n  handleSubmit(event) {\n    var formData = {...this.state.formData};\n    event.preventDefault();\n    this.callApi(formData);\n  }\n\n  handleInputChange(event) {\n    let formData = {...this.state.formData};\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    formData[name] = value;\n\n    this.setState({\n      formData: formData\n    });\n  }\n\n  handleResponse(data) {\n    this.setState({response: data});\n  }\n\n  callApi = async (data) => {\n    let headers = {headers: {'Content-Type' : 'application/json'}};\n    axios.post(\"/login\", data, headers)\n    .then((response) => {\n      console.log(response);\n      this.handleResponse(response.data.message);\n      if (response.status === 200){\n        this.props.history.push(\"/\");\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      this.handleResponse(\"Invalid Username/Email or Password.\");\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"login\" id=\"login\">\n      <Container fluid>\n      <Col xs={{size: 10, offset: 1}} sm={{size: 6, offset: 3}} lg={{size: 4, offset: 4}} >\n      <div className=\"my-5\">\n      <Card className=\"text-left\">\n        <CardHeader>MERN User Login:</CardHeader>\n        <CardBody>\n          <Form method=\"post\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Label for=\"username\">Email</Label>\n            <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Email\" value={this.state.username} onChange={this.handleInputChange} required/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Password</Label>\n            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleInputChange} required/>\n          </FormGroup>\n          <Button type=\"submit\" className=\"w-100\" color=\"success\">Submit</Button>\n          </Form>\n          <div><p className=\"text-danger mt-3\">{this.state.response}</p></div>\n        </CardBody>\n        <CardFooter>New User? <Link to=\"/register\">Create Account</Link></CardFooter>\n      </Card>\n      </div>\n      </Col>\n      </Container>\n      </div>\n    )\n  }\n}\n","//User dashboard for reactXNodeAuthentication template\n// 6/25/19\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport './styles.css';\n\nexport default class Dashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"dashboard\" id=\"dashboard\">\n      <Container fluid>\n        <Row>\n          <Col xs=\"12\">\n            <h2>Success! Private Route Accessed</h2><FontAwesomeIcon icon=\"thumbs-up\" size=\"2x\" className=\"my-auto mx-1\"/>\n          </Col>\n        </Row>\n      </Container>\n      </div>\n    )\n  }\n}\n","// Creason Media Login Page\n\nimport React from 'react';\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input, Card, CardHeader, CardFooter, CardBody  } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles.css';\n\nexport default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.onUserCreate = this.onUserCreate.bind(this);\n    this.state = {\n      formData: {\n        fName: '',\n        lName: '',\n        email: '',\n        password: '',\n        repassword: ''\n      },\n      response: \"\",\n      isCreated: \"\"\n    };\n  }\n  onUserCreate(response, status) {\n    this.setState({response: response});\n    if (status === \"success\") this.setState({isCreated:true});\n  }\n  handleSubmit(event) {\n    let formData = this.state.formData;\n    event.preventDefault();\n    this.callApi(formData);\n  }\n\n  handleInputChange(event) {\n    let formData = {...this.state.formData};\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    formData[name] = value;\n    this.setState({\n      formData: formData\n    });\n  }\n\n  callApi = async (data) => {\n    let headers = {headers: {'Content-Type' : 'application/json'}};\n    axios.post(\"/register\", data, headers)\n    .then((response) => {\n      console.log(response);\n      if (response.status === 200){\n        this.setState({response: \"User Account Created - Log In!\", isCreated: true});\n      }\n    })\n    .catch((error) => {\n      if(error.response.status >= 500){\n        this.setState({response: \"Server error - please try later.\", isCreated: false});\n      }\n      else{\n        this.setState({response: \"Username/Email already exists\", isCreated: false});\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"register\" id=\"register\">\n      <Container fluid>\n      <Col xs={{size: 10, offset: 1}} className=\"my-4\">\n      <div>\n        <Card className=\"text-left\">\n          <CardHeader>Create Account:</CardHeader>\n          <CardBody>\n            <Form method=\"post\" onSubmit={this.handleSubmit}>\n            <FormGroup row>\n              <Label for=\"fName\" sm={2}>First Name</Label>\n              <Col sm={10}>\n                <Input type=\"text\" name=\"fName\" id=\"fName\" placeholder=\"First Name\" value={this.state.fName} onChange={this.handleInputChange} required/>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for=\"lName\" sm={2}>Last Name</Label>\n              <Col sm={10}>\n                <Input type=\"text\" name=\"lName\" id=\"lName\" placeholder=\"Last Name\" value={this.state.lName} onChange={this.handleInputChange} required/>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label for=\"email\" sm={2}>Email</Label>\n              <Col sm={10}>\n                <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange} required/>\n              </Col>\n            </FormGroup>\n            <Row form>\n              <Col sm={6}>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleInputChange} required/>\n                </FormGroup>\n              </Col>\n              <Col sm={6}>\n                <FormGroup>\n                  <Label for=\"repassword\">Re-enter Password</Label>\n                  <Input type=\"password\" name=\"repassword\" id=\"repassword\" placeholder=\"Re-enter Password\" value={this.state.repassword} onChange={this.handleInputChange} required/>\n                </FormGroup>\n              </Col>\n            </Row>\n            <Button type=\"submit\" className=\"w-75 mx-auto d-block\" color=\"success\">Submit</Button>\n            </Form>\n            <div>{this.state.isCreated ? <p className=\"text-success mt-3\">{this.state.response}</p> : <p className=\"text-danger mt-3\">{this.state.response}</p>}</div>\n          </CardBody>\n          <CardFooter>Already have an account? <Link to=\"/login\">Login</Link></CardFooter>\n        </Card>\n      </div>\n      </Col>\n      </Container>\n      </div>\n    )\n  }\n}\n","//Check Authorization utility for reactXNodeAuthentication.  Submits post request\n// to server to check if user session exists.  If not, re-direct to /login.\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nconst axios = require('axios');\n\nexport default function checkAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    componentDidMount() {\n      axios.get('/checkauth')\n      .then((res) => {\n        if (res.status === 200){\n          this.setState({loading: false});\n        }\n        else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({loading:false, redirect: true});\n      });\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/login\" />;\n      }\n      return (\n        <React.Fragment>\n          <ComponentToProtect {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Login from './pages/Login/Login';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport Register from './pages/Register/Register';\nimport checkAuth from './components/CheckAuth/checkAuth';\nimport { Route, Switch } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faThumbsUp, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faThumbsUp, faArrowLeft)\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={checkAuth(Dashboard)}/>\n        <Route path=\"/register\" exact component={Register}/>\n        <Route path=\"/login\" exact component={Login}/>\n      </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}